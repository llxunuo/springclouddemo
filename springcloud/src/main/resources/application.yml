# server:
#    port: 8761
#
# eureka:
#    instance:
#        hostname: localhost
#    client:
#        registerWithEureka: false
#        fetchRegistry: false
#        serviceUrl:
#            defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
#    server:
#      enable-self-preservation: false


#设置了两个eureka，实现高可用
spring:
  application:
    name: eureka-demo
server:
  port: 8761
eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 4000

---
#--spring.profiles.active=peer1
spring:
  application:
    name: eureka-demo
  profiles: peer1
server:
  port: 8761
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8762/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 4000
    peer-eureka-nodes-update-interval-ms: 30000
  instance:
    hostname: peer1
---
#--spring.profiles.active=peer2
spring:
  application:
    name: eureka-demo
  profiles: peer2
server:
  port: 8762
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 4000
    peer-eureka-nodes-update-interval-ms: 30000
  instance:
      hostname: peer2